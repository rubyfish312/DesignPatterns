#%%
class ClassDecorator:
    """ class decorator, to record the counting of a instance 
    that is generated by a class """ 

    def __init__(self, func):
        self._numOfCall = 0
        self._func = func

    def __call__(self, *args, **kwargs):
        self._numOfCall += 1
        obj = self._func(*args, *kwargs)
        print("creat %s 's %d th instance : %s" %(self._func.__name__, self._numOfCall, id(obj)))
        return obj


#%%
@ClassDecorator
class MyClass:
    def __init__(self, name):
        self._name = name
    def getName(self):
        return self._name

#%%
tony = MyClass("Tony")
karry = MyClass("Karry")
print(id(tony))
print(id(karry))
    


# %%
